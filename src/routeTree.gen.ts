/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as AuthImport } from './routes/~_auth'
import { Route as IndexImport } from './routes/~index'
import { Route as AuthUsersIndexImport } from './routes/~_auth/~users/~index'
import { Route as AuthReportsIndexImport } from './routes/~_auth/~reports/~index'
import { Route as AuthPromotersIndexImport } from './routes/~_auth/~promoters/~index'
import { Route as AuthFranchisesIndexImport } from './routes/~_auth/~franchises/~index'
import { Route as AuthDashboardIndexImport } from './routes/~_auth/~dashboard/~index'
import { Route as AuthClientsIndexImport } from './routes/~_auth/~clients/~index'

// Create Virtual Routes

const AuthFranchisesCreateIndexLazyImport = createFileRoute(
  '/_auth/franchises/create/',
)()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportsIndexRoute = AuthReportsIndexImport.update({
  path: '/reports/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPromotersIndexRoute = AuthPromotersIndexImport.update({
  path: '/promoters/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthFranchisesIndexRoute = AuthFranchisesIndexImport.update({
  path: '/franchises/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardIndexRoute = AuthDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthClientsIndexRoute = AuthClientsIndexImport.update({
  path: '/clients/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthFranchisesCreateIndexLazyRoute =
  AuthFranchisesCreateIndexLazyImport.update({
    path: '/franchises/create/',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/~_auth/~franchises/~create/~index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/clients/': {
      id: '/_auth/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthClientsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/franchises/': {
      id: '/_auth/franchises/'
      path: '/franchises'
      fullPath: '/franchises'
      preLoaderRoute: typeof AuthFranchisesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/promoters/': {
      id: '/_auth/promoters/'
      path: '/promoters'
      fullPath: '/promoters'
      preLoaderRoute: typeof AuthPromotersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reports/': {
      id: '/_auth/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthReportsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/franchises/create/': {
      id: '/_auth/franchises/create/'
      path: '/franchises/create'
      fullPath: '/franchises/create'
      preLoaderRoute: typeof AuthFranchisesCreateIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthClientsIndexRoute,
    AuthDashboardIndexRoute,
    AuthFranchisesIndexRoute,
    AuthPromotersIndexRoute,
    AuthReportsIndexRoute,
    AuthUsersIndexRoute,
    AuthFranchisesCreateIndexLazyRoute,
  }),
})

/* prettier-ignore-end */
